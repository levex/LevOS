; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Dev\LevOS\kernel\GFXApp\main.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?OUT@@YAXD@Z					; OUT
; Function compile flags: /Odtp /ZI
; File c:\dev\levos\kernel\gfxapp\main.cpp
;	COMDAT ?OUT@@YAXD@Z
_TEXT	SEGMENT
_a$ = 8							; size = 1
?OUT@@YAXD@Z PROC					; OUT, COMDAT

; 11   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi

; 12   : 		_asm mov dx, 0xE9

	mov	dx, 233					; 000000e9H

; 13   : 		_asm mov al, a

	mov	al, BYTE PTR _a$[ebp]

; 14   : 		_asm out dx, al

	out	dx, al

; 15   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?OUT@@YAXD@Z ENDP					; OUT
_TEXT	ENDS
PUBLIC	??_C@_09KKBHBBKF@LevOS?52?40?$AA@		; `string'
PUBLIC	??_C@_0BM@KGEMJOIP@Levex?5is?5an?5epic?5developer?$CB?$AA@ ; `string'
PUBLIC	??_C@_08OBGPNNFO@test?4bmp?$AA@			; `string'
PUBLIC	??_C@_0N@BPJMLEOO@?6Gfx?5init?4?4?4?$AA@	; `string'
PUBLIC	_main
EXTRN	__imp__VGA_deinit:PROC
EXTRN	?repaintScreen@@YAXXZ:PROC			; repaintScreen
EXTRN	?addWindow@@YAHPAUWINDOW@@@Z:PROC		; addWindow
EXTRN	?W_TEXTPOPUP_init@@YAXPAUW_TEXTPOPUP@@PAUWINDOW@@PAD2@Z:PROC ; W_TEXTPOPUP_init
EXTRN	?initWindowManager@@YAXXZ:PROC			; initWindowManager
EXTRN	__imp__VGA_clear:PROC
EXTRN	__imp__VGA_putimage:PROC
EXTRN	__imp__VGA_init:PROC
EXTRN	__imp__getInputChar:PROC
EXTRN	__imp__print:PROC
;	COMDAT ??_C@_09KKBHBBKF@LevOS?52?40?$AA@
CONST	SEGMENT
??_C@_09KKBHBBKF@LevOS?52?40?$AA@ DB 'LevOS 2.0', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@KGEMJOIP@Levex?5is?5an?5epic?5developer?$CB?$AA@
CONST	SEGMENT
??_C@_0BM@KGEMJOIP@Levex?5is?5an?5epic?5developer?$CB?$AA@ DB 'Levex is a'
	DB	'n epic developer!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08OBGPNNFO@test?4bmp?$AA@
CONST	SEGMENT
??_C@_08OBGPNNFO@test?4bmp?$AA@ DB 'test.bmp', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BPJMLEOO@?6Gfx?5init?4?4?4?$AA@
CONST	SEGMENT
??_C@_0N@BPJMLEOO@?6Gfx?5init?4?4?4?$AA@ DB 0aH, 'Gfx init...', 00H ; `string'
; Function compile flags: /Odtp /ZI
CONST	ENDS
;	COMDAT _main
_TEXT	SEGMENT
_w$ = -76						; size = 34
_tp$ = -40						; size = 8
_timeout$ = -32						; size = 4
_my$ = -28						; size = 4
_mx$ = -24						; size = 4
_y$ = -12						; size = 4
_x$ = -8						; size = 4
_c$ = -1						; size = 1
_main	PROC						; COMDAT

; 19   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 148				; 00000094H
	push	ebx
	push	esi
	push	edi

; 20   : 	print("\nGfx init...");

	push	OFFSET ??_C@_0N@BPJMLEOO@?6Gfx?5init?4?4?4?$AA@
	call	DWORD PTR __imp__print
	add	esp, 4
$LN11@main:

; 21   : 	while(getInputChar() == 0);

	call	DWORD PTR __imp__getInputChar
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN10@main
	jmp	SHORT $LN11@main
$LN10@main:

; 22   : 	VGA_init();

	call	DWORD PTR __imp__VGA_init

; 23   : 	VGA_putimage(16, 16, "test.bmp");

	push	OFFSET ??_C@_08OBGPNNFO@test?4bmp?$AA@
	push	16					; 00000010H
	push	16					; 00000010H
	call	DWORD PTR __imp__VGA_putimage
	add	esp, 12					; 0000000cH
$LN9@main:

; 24   : 	while(getInputChar() == 0);

	call	DWORD PTR __imp__getInputChar
	movsx	eax, al
	test	eax, eax
	jne	SHORT $LN8@main
	jmp	SHORT $LN9@main
$LN8@main:

; 25   : 	VGA_clear();

	call	DWORD PTR __imp__VGA_clear

; 26   : 	//VGA_putstring(16, 160, "string printing WORKING");
; 27   : 	char c = 0;

	mov	BYTE PTR _c$[ebp], 0

; 28   : 	int x = 0, y = 0;

	mov	DWORD PTR _x$[ebp], 0
	mov	DWORD PTR _y$[ebp], 0

; 29   : 	//VGA_putrect(16, 16, 250, 450);
; 30   : 	MOUSE_STATE m;
; 31   : 	int mx = 0; int my = 0;

	mov	DWORD PTR _mx$[ebp], 0
	mov	DWORD PTR _my$[ebp], 0

; 32   : 	int timeout = 100000;

	mov	DWORD PTR _timeout$[ebp], 100000	; 000186a0H

; 33   : 	initWindowManager();

	call	?initWindowManager@@YAXXZ		; initWindowManager

; 34   : 	W_TEXTPOPUP tp;
; 35   : 	WINDOW w;
; 36   : 	W_TEXTPOPUP_init(&tp, &w, "LevOS 2.0" ,"Levex is an epic developer!");

	push	OFFSET ??_C@_0BM@KGEMJOIP@Levex?5is?5an?5epic?5developer?$CB?$AA@
	push	OFFSET ??_C@_09KKBHBBKF@LevOS?52?40?$AA@
	lea	eax, DWORD PTR _w$[ebp]
	push	eax
	lea	ecx, DWORD PTR _tp$[ebp]
	push	ecx
	call	?W_TEXTPOPUP_init@@YAXPAUW_TEXTPOPUP@@PAUWINDOW@@PAD2@Z ; W_TEXTPOPUP_init
	add	esp, 16					; 00000010H

; 37   : 	W_TEXTPOPUP tp2;
; 38   : 
; 39   : 	addWindow(&w);

	lea	eax, DWORD PTR _w$[ebp]
	push	eax
	call	?addWindow@@YAHPAUWINDOW@@@Z		; addWindow
	add	esp, 4
$LN7@main:

; 40   : 	/* paint is still good */
; 41   : 	while(true)

	mov	eax, 1
	test	eax, eax
	je	$LN6@main

; 42   : 	{
; 43   : 		repaintScreen();

	call	?repaintScreen@@YAXXZ			; repaintScreen

; 44   : 		c = getInputChar();

	call	DWORD PTR __imp__getInputChar
	mov	BYTE PTR _c$[ebp], al

; 45   : 		if(c == 0) continue;

	movsx	eax, BYTE PTR _c$[ebp]
	test	eax, eax
	jne	SHORT $LN5@main
	jmp	SHORT $LN7@main
$LN5@main:

; 46   : 		//VGA_putchar(x += 8, y, c);
; 47   : 		//printHexa(c);
; 48   : 		//if(c == 0xD){ y += 8; x = 0; continue; }
; 49   : 		if(c == 0x64) {  w.move(&w, w.startX + 16, w.startY);  continue; } // d

	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 100				; 00000064H
	jne	SHORT $LN4@main
	mov	eax, DWORD PTR _w$[ebp+17]
	push	eax
	mov	ecx, DWORD PTR _w$[ebp+13]
	add	ecx, 16					; 00000010H
	push	ecx
	lea	edx, DWORD PTR _w$[ebp]
	push	edx
	call	DWORD PTR _w$[ebp+4]
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN7@main
$LN4@main:

; 50   : 		if(c == 0x61) { w.move(&w, w.startX - 16,  w.startY); continue; } // a

	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 97					; 00000061H
	jne	SHORT $LN3@main
	mov	eax, DWORD PTR _w$[ebp+17]
	push	eax
	mov	ecx, DWORD PTR _w$[ebp+13]
	sub	ecx, 16					; 00000010H
	push	ecx
	lea	edx, DWORD PTR _w$[ebp]
	push	edx
	call	DWORD PTR _w$[ebp+4]
	add	esp, 12					; 0000000cH
	jmp	SHORT $LN7@main
$LN3@main:

; 51   : 		if(c == 0x77) { w.move(&w, w.startX,w.startY - 16); continue; } // w

	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 119				; 00000077H
	jne	SHORT $LN2@main
	mov	eax, DWORD PTR _w$[ebp+17]
	sub	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _w$[ebp+13]
	push	ecx
	lea	edx, DWORD PTR _w$[ebp]
	push	edx
	call	DWORD PTR _w$[ebp+4]
	add	esp, 12					; 0000000cH
	jmp	$LN7@main
$LN2@main:

; 52   : 		if(c == 0x73) { w.move(&w, w.startX,w.startY + 16); continue; } // s

	movsx	eax, BYTE PTR _c$[ebp]
	cmp	eax, 115				; 00000073H
	jne	SHORT $LN1@main
	mov	eax, DWORD PTR _w$[ebp+17]
	add	eax, 16					; 00000010H
	push	eax
	mov	ecx, DWORD PTR _w$[ebp+13]
	push	ecx
	lea	edx, DWORD PTR _w$[ebp]
	push	edx
	call	DWORD PTR _w$[ebp+4]
	add	esp, 12					; 0000000cH
	jmp	$LN7@main
$LN1@main:

; 53   : 		/*if(c == 0x08) //bksp
; 54   : 		{
; 55   : 			x -= 8;
; 56   : 			VGA_putchar(x, y, ' ');
; 57   : 			continue;
; 58   : 		}
; 59   : 		VGA_putchar(x, y, c);
; 60   : 		x += 8;*/
; 61   : 	}

	jmp	$LN7@main
$LN6@main:

; 62   : 	//getInputChar();
; 63   : 	VGA_deinit();

	call	DWORD PTR __imp__VGA_deinit

; 64   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
END
