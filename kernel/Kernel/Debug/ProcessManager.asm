; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	C:\Dev\LevOS\kernel\Kernel\ProcessManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

_BSS	SEGMENT
_numberOfProcesses DD 01H DUP (?)
_currentProcessId DD 01H DUP (?)
_next	DD	01H DUP (?)
_d	DD	01H DUP (?)
__ism	DB	01H DUP (?)
	ALIGN	4

_kEBP	DD	01H DUP (?)
_kESP	DD	01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
_lastStackTop DD 0bfc00000H
_DATA	ENDS
PUBLIC	?saveKernelStack@@YAXXZ				; saveKernelStack
; Function compile flags: /Ogtp
; File c:\dev\levos\kernel\kernel\processmanager.cpp
;	COMDAT ?saveKernelStack@@YAXXZ
_TEXT	SEGMENT
?saveKernelStack@@YAXXZ PROC				; saveKernelStack, COMDAT

; 23   : 	_asm mov kEBP, ebp

	mov	DWORD PTR _kEBP, ebp

; 24   : 	_asm mov kESP, esp

	mov	DWORD PTR _kESP, esp

; 25   : }

	ret	0
?saveKernelStack@@YAXXZ ENDP				; saveKernelStack
_TEXT	ENDS
PUBLIC	?restoreKernelStack@@YAXXZ			; restoreKernelStack
; Function compile flags: /Ogtpy
;	COMDAT ?restoreKernelStack@@YAXXZ
_TEXT	SEGMENT
?restoreKernelStack@@YAXXZ PROC				; restoreKernelStack, COMDAT

; 29   : 	_asm mov ebp, kEBP

	mov	ebp, DWORD PTR _kEBP

; 30   : 	_asm mov esp, kESP

	mov	esp, DWORD PTR _kESP

; 31   : }

	ret	0
?restoreKernelStack@@YAXXZ ENDP				; restoreKernelStack
_TEXT	ENDS
PUBLIC	??_C@_0DA@FMDFCJBC@?6?5?5?5Stack?5allocated?5at?3?50x?$CFx?5gro@ ; `string'
PUBLIC	?allocStack@@YAPAEPAU__PROCESS@@@Z		; allocStack
EXTRN	?DebugPrintf@@YAHPBDZZ:PROC			; DebugPrintf
;	COMDAT ??_C@_0DA@FMDFCJBC@?6?5?5?5Stack?5allocated?5at?3?50x?$CFx?5gro@
CONST	SEGMENT
??_C@_0DA@FMDFCJBC@?6?5?5?5Stack?5allocated?5at?3?50x?$CFx?5gro@ DB 0aH, ' '
	DB	'  Stack allocated at: 0x%x growing downwards!', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ?allocStack@@YAPAEPAU__PROCESS@@@Z
_TEXT	SEGMENT
_p$ = 8							; size = 4
?allocStack@@YAPAEPAU__PROCESS@@@Z PROC			; allocStack, COMDAT

; 35   : 	lastStackTop += 4096;

	mov	eax, DWORD PTR _lastStackTop
	add	eax, 4096				; 00001000H

; 36   : 	DebugPrintf("\n   Stack allocated at: 0x%x growing downwards!", lastStackTop);

	push	eax
	push	OFFSET ??_C@_0DA@FMDFCJBC@?6?5?5?5Stack?5allocated?5at?3?50x?$CFx?5gro@
	mov	DWORD PTR _lastStackTop, eax
	call	?DebugPrintf@@YAHPBDZZ			; DebugPrintf

; 37   : 	p->stack_top = lastStackTop;

	mov	eax, DWORD PTR _lastStackTop
	mov	ecx, DWORD PTR _p$[esp+4]
	add	esp, 8
	mov	DWORD PTR [ecx+2], eax

; 38   : 	p->regs.esp = (unsigned int)p->stack_top;

	mov	DWORD PTR [ecx+35], eax

; 39   : 	/*p->regs.esp-- = 0;
; 40   : 	p->regs.esp-- = 0;
; 41   : 	p->regs.esp-- = 0;
; 42   : 	p->regs.esp-- = 0;
; 43   : 	p->regs.esp-- = 0;
; 44   : 	p->regs.esp-- = 0;
; 45   : 	p->regs.esp-- = 0;*/
; 46   : 	return lastStackTop;
; 47   : }

	ret	0
?allocStack@@YAPAEPAU__PROCESS@@@Z ENDP			; allocStack
_TEXT	ENDS
END
